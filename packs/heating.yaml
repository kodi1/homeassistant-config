homeassistant:
  customize:
    binary_sensor.home_heating:
      icon: mdi:radiator

climate:
  - platform: eq3btsmart_m
    scan_interval: 600
    devices:
      living:
        mac: '00:1A:22:0A:FD:B2'

group:
  heating_control:
    view: false
    control: hidden
    icon: mdi:radiator
    name: heating
    entities:
      - input_boolean.home_heating
      - input_number.temp_home
      - input_number.temp_away
      - automation.living_heating_auto
      - climate.living

  graph_climate:
    view: false
    control: hidden
    entities:
      - history_graph.climate

automation:
  - alias: auto_heating_visible
    trigger:
      - platform: state
        entity_id: input_boolean.control_heating
      - platform: homeassistant
        event: start
    action:
      - service: script.group_visibility
        data:
          entity_id: group.heating_control
          cond: input_boolean.control_heating
          visible_state: 'on'
      - service: script.group_visibility
        data:
          entity_id: group.graph_climate
          cond: input_boolean.control_heating
          visible_state: 'on'

  - alias: auto_master_heating
    trigger:
      - platform: state
        entity_id: input_boolean.control_heating
    action:
      - service_template: >
          {%- if states.input_boolean.control_heating.state == 'on' -%}
            script.control_heating_m_on
          {%- else -%}
            script.control_heating_m_off
          {%- endif -%}

  - alias: living_heating_auto
    trigger:
      - platform: state
        entity_id: binary_sensor.home_heating
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{trigger.from_state.state != trigger.to_state.state}}'
        - condition: state
          entity_id: input_boolean.control_heating
          state: 'on'
    action:
      - service_template: >
          input_boolean.turn_{{trigger.to_state.state}}
        entity_id: input_boolean.home_heating

  - alias: living_heating
    trigger:
      - platform: state
        entity_id: input_boolean.home_heating
    action:
      - service: script.heat_conrtol
        data_template:
          dat: '{{trigger.to_state.state}}'

input_boolean:
  home_heating:
    name: comfort
    icon: mdi:radiator
  control_heating:
    name: auto heating
    icon: mdi:radiator

input_number:
  temp_home:
    name: 'comfort'
    unit_of_measurement: '°C'
    min: 15
    max: 25
    step: 0.5
    icon: mdi:home
  temp_away:
    name: 'eco'
    unit_of_measurement: '°C'
    min: 15
    max: 25
    step: 0.5
    icon: mdi:home-outline

sensor:
  - platform: template
    sensors:
      valve_living:
        unit_of_measurement: '%'
        icon_template: 'mdi:percent'
        value_template: >-
          {%- if states('climate.living') != 'unknown' and
                  states('climate.living') != 'unavailable' -%}
            {{ states.climate.living.attributes.valve|int }}
          {% else -%}
            {{ states.sensor.valve_living.state }}
          {%- endif -%}
      temperature_living:
        unit_of_measurement: '°C'
        icon_template: 'mdi:temperature-celsius'
        value_template: >-
          {%- if states('climate.living') != 'unknown' and
                  states('climate.living') != 'unavailable' -%}
            {{ states.climate.living.attributes.temperature|float }}
          {% else -%}
            {{ states.sensor.temperature_target_living.state }}
          {%- endif -%}

binary_sensor:
  - platform: template
    sensors:
      home_heating:
        device_class: heat
        delay_on:
          seconds: 300
        delay_off:
          seconds: 300
        value_template: >-
          {{
            is_state("device_tracker.n0ll", "home") or
            is_state("binary_sensor.sound_bar_active", "on")
          }}
      open_living:
        device_class: opening
        value_template: >-
          {%- if states('climate.living') != 'unknown' and
                  states('climate.living') != 'unavailable' -%}
            {{ states.climate.living.attributes.window_open }}
          {% else -%}
            {{ is_state('binary_sensor.open_living', 'on') }}
          {%- endif -%}

script:
  control_heating_m_on:
    sequence:
      - service: climate.set_operation_mode
        entity_id: climate.living
        data:
          operation_mode: 'auto'
      - service: script.all_notify
        data:
          msg: Master heating On - valve auto.

  control_heating_m_off:
    sequence:
      - service: climate.set_operation_mode
        entity_id: climate.living
        data:
          operation_mode: 'on'
      - service: script.all_notify
        data:
          msg: Master heating Off - valve open.

  heat_conrtol_home:
    sequence:
      - condition: template
        value_template: '{{d == "on"}}'
      - service: climate.set_operation_mode
        entity_id: climate.living
        data:
          operation_mode: 'manual'
      - service: climate.set_temperature
        entity_id: climate.living
        data_template:
          temperature: '{{states.input_number.temp_home.state|int}}'
      - service: climate.set_operation_mode
        data:
          entity_id: climate.living
          operation_mode: 'boost'

  heat_conrtol_away:
    sequence:
      - condition: template
        value_template: '{{d == "off"}}'
      - service: climate.set_operation_mode
        entity_id: climate.living
        data:
          operation_mode: 'auto'

  heat_conrtol:
    sequence:
      - service: script.heat_conrtol_home
        data_template:
          d: '{{ dat }}'
      - service: script.heat_conrtol_away
        data_template:
          d: '{{ dat }}'

history_graph:
  climate:
    name: Climate
    entities:
      - sensor.bme280_171f93_temperature
      - sensor.temperature_living
      - sensor.valve_living
    hours_to_show: 24
    refresh: 600
