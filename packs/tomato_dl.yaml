homeassistant:
  customize:
    sensor.tomato_disk_free:
      icon: mdi:cloud-sync
    #sensor.tomato_disk_free_rand:
      #hidden: true
    binary_sensor.download_active:
      icon: mdi:download
      hidden: true
    sensor.transmission_status:
      hidden: true

sensor:
  - platform: transmission
    host: !secret trans_host
    port: !secret trans_port
    username: !secret trans_user
    password: !secret trans_pass
    scan_interval: 300
    monitored_variables:
      - 'current_status'

  - platform: template
    sensors:
      transmission_state:
        friendly_name: "transmission"
        value_template: '{{states.sensor.transmission_status.state}}'
        icon_template: >-
          {% if not is_state('sensor.transmission_status', 'unknown') -%}
            {%- if is_state('sensor.transmission_status', 'Downloading') -%}
              mdi:download
            {%- endif -%}
            {%- if is_state('sensor.transmission_status', 'Seeding') -%}
              mdi:upload
            {%- endif -%}
            {%- if is_state('sensor.transmission_status', 'Up/Down') -%}
              mdi:pipe
            {%- endif -%}
            {%- if is_state('sensor.transmission_status', 'idle') -%}
              mdi:pipe-disconnected
            {%- endif -%}
          {%- else -%}
            mdi:sync-alert
          {%- endif -%}

  - platform: command_line
    #name: tomato disk free rand
    name: tomato disk free
    command: "/home/hass/.homeassistant/cmds/tomato_disk_free"
    unit_of_measurement: "MB"
    scan_interval: 600

binary_sensor:
  - platform: template
    sensors:
      download_active:
        value_template: '{{
                            is_state("sensor.transmission_status", "Downloading") or
                              is_state("sensor.transmission_status", "Up/Down")
                          }}'

automation:
  - alias: transmission_notify
    trigger:
      - platform: event
        event_type: transmission
    action:
      - service: script.all_notify
        data_template:
          msg: '{{trigger.event.data.file}} finished'

  - alias: download_ready
    trigger:
      - platform: state
        entity_id: binary_sensor.download_active
        to: 'off'
        from: 'on'
    action:
      - service: script.all_notify
        data:
          msg: Download ready
