# homeassistant:
#   customize:
#     script.root_to_work:
#       icon: mdi:clock-start
#     script.root_from_work:
#       icon: mdi:clock-end
#     alert.work_acc_update:
#       icon: mdi:account-alert
#     automation.work_end_notify:
#       icon: mdi:clock-out
#     automation.root_work:
#       friendly_name: work
#       icon: mdi:clock-in
#     binary_sensor.work_acc:
#       friendly_name: work

# alert:
#   work_acc_update:
#     name: work acc
#     title: work
#     entity_id: binary_sensor.work_acc
#     state: 'on'
#     repeat:
#       - 5
#       - 15
#     can_acknowledge: True
#     message: miss {{state_attr('sensor.work_acc', 'miss_count')}}
#     done_message: end miss {{state_attr('sensor.work_acc', 'miss_count')}}
#     notifiers:
#       - gmail

# mqtt:
#   sensor:
#     - name: work_acc
#       state_topic: 'work_acc'
#       value_template: '{{ value_json.state }}'
#       json_attributes_topic: 'work_acc'
#       json_attributes_template: '{{ value_json.attr }}'

# template:
#   - binary_sensor:
#     - name: work_acc
#       icon: >-
#         {%- if is_state('sensor.work_acc', 'Friday') -%}
#           {%- if is_state_attr('sensor.work_acc', 'miss_count', 0) -%}
#             mdi:timetable
#           {%- else -%}
#             mdi:table-search
#           {%- endif -%}
#         {%- else -%}
#           mdi:table-edit
#         {%- endif -%}
#       delay_on:
#         seconds: 30
#       delay_off:
#         seconds: 5
#       state: >-
#         {%- if states('sensor.work_acc') and
#             state_attr('sensor.work_acc', 'miss_count') -%}
#           {{ is_state('sensor.work_acc', 'Friday') and
#             is_state('input_boolean.at_work', 'on') and
#             not is_state_attr('sensor.work_acc', 'miss_count', 0) }}
#         {%- else -%}
#           False
#         {%- endif -%}

# automation:
#   - alias: root_work
#     id: root_work
#     triggers:
#       - trigger: zone
#         entity_id: device_tracker.root
#         zone: zone.work
#         event: enter
#       - trigger: zone
#         entity_id: device_tracker.root
#         zone: zone.work
#         event: leave
#     actions:
#       - action: >
#           {%-
#               set scr = {
#                 'enter': 'script.root_to_work',
#                 'leave': 'script.root_from_work'
#               }
#             -%}
#           {{ scr[trigger.event] }}

#   - alias: work_end_notify
#     id: work_end_notify
#     initial_state: off
#     triggers:
#       - trigger: state
#         entity_id: sensor.work_acc
#     conditions:
#       condition: and
#       conditions:
#         - condition: template
#           value_template: >-
#             {{ trigger.to_state.state not in ['Friday', 'Saturday', 'Sunday'] }}
#     actions:
#       - action: notify.gmail
#         data_template:
#           title: '{{ trigger.to_state.state | lower }}'
#           message: "{{ state_attr('sensor.work_acc', 'miss_count') }} days miss"

# input_boolean:
#   at_work:
#     initial: off
#     icon: mdi:office-building

# script:
#   root_from_work:
#     sequence:
#       - action: logbook.log
#         data:
#           name: track
#           message: 'work exit'
#       - action: input_boolean.turn_off
#         entity_id: input_boolean.at_work
#       - action: automation.turn_off
#         entity_id: automation.work_end_notify

#   root_to_work:
#     sequence:
#       - action: logbook.log
#         data:
#           name: track
#           message: 'work enter'
#       - action: input_boolean.turn_on
#         entity_id: input_boolean.at_work
#       - action: automation.turn_on
#         entity_id: automation.work_end_notify
