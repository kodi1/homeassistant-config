homeassistant:
  customize:
    binary_sensor.home_heating:
      icon: mdi:radiator
    binary_sensor.open_living:
      icon: mdi:window-open

climate:
  - platform: eq3btsmart
    scan_interval: 300
    devices:
      living:
        mac: '00:1A:22:0A:FD:B2'

automation:
  - alias: auto_master_heating
    trigger:
      - platform: state
        entity_id: input_boolean.control_heating
    action:
      - service_template: >
          {%- if is_state('input_boolean.control_heating', 'on') -%}
            script.control_heating_m_on
          {%- else -%}
            script.control_heating_m_off
          {%- endif -%}

  - alias: living_heating_auto
    trigger:
      - platform: state
        entity_id: binary_sensor.home_heating
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{trigger.from_state.state != trigger.to_state.state}}'
        - condition: state
          entity_id: input_boolean.control_heating
          state: 'on'
    action:
      - service_template: >
          input_boolean.turn_{{trigger.to_state.state}}
        entity_id: input_boolean.home_heating

  - alias: living_heating
    trigger:
      - platform: state
        entity_id: input_boolean.home_heating
    action:
      - service_template: >-
          {%- if (trigger.to_state.state == 'on') -%}
            script.heat_conrtol_home
          {%- else -%}
            script.heat_conrtol_away
          {%- endif -%}

input_boolean:
  home_heating:
    name: comfort
    icon: mdi:radiator

  control_heating:
    name: auto heating
    icon: mdi:radiator

input_number:
  temp_home:
    name: 'comfort'
    unit_of_measurement: '°C'
    min: 18
    max: 23
    step: 0.5
    icon: mdi:home

  temp_away:
    name: 'eco'
    unit_of_measurement: '°C'
    min: 15
    max: 20
    step: 0.5
    icon: mdi:home-outline

sensor:
  - platform: template
    sensors:
      valve_living:
        unit_of_measurement: '%'
        icon_template: 'mdi:percent'
        value_template: >-
          {%- if states('climate.living') != 'unknown' and
                  states('climate.living') != 'unavailable' -%}
            {{ state_attr('climate.living', 'valve') | int }}
          {% else -%}
            {{ states('sensor.valve_living') }}
          {%- endif -%}

      temperature_living:
        unit_of_measurement: '°C'
        icon_template: 'mdi:temperature-celsius'
        value_template: >-
          {%- if states('climate.living') != 'unknown' and
                  states('climate.living') != 'unavailable' -%}
            {{ state_attr('climate.living', 'temperature') | float }}
          {% else -%}
            {{ states('sensor.temperature_target_living') }}
          {%- endif -%}

binary_sensor:
  - platform: template
    sensors:
      home_heating:
        device_class: heat
        delay_on:
          seconds: 60
        delay_off:
          seconds: 300
        value_template: >-
          {{
            is_state('device_tracker.n0ll', 'home') or
            is_state('binary_sensor.sound_bar_active', 'on')
          }}

      open_living:
        device_class: opening
        value_template: >-
          {%- if states('climate.living') != 'unknown' and
                  states('climate.living') != 'unavailable' -%}
            {{ state_attr('climate.living', 'window_open') }}
          {% else -%}
            {{ is_state('binary_sensor.open_living', 'on') }}
          {%- endif -%}

script:
  control_heating_m_on:
    sequence:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.living
          hvac_mode: 'auto'
      - service: script.all_notify
        data:
          tit: 'heating on'
          msg: 'valve auto'

  control_heating_m_off:
    sequence:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.living
          hvac_mode: 'heat'
      - service: climate.set_temperature
        data:
          entity_id: climate.living
          temperature: 30
      - service: script.all_notify
        data:
          tit: 'heating off'
          msg: 'valve open'

  heat_conrtol_home:
    sequence:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.living
          hvac_mode: 'heat'
      - service: climate.set_temperature
        data:
          entity_id: climate.living
        data_template:
          temperature: "{{states('input_number.temp_home') | float}}"
      - delay: '00:00:15'
      - service: climate.set_preset_mode
        data:
          entity_id: climate.living
          preset_mode: 'boost'

  heat_conrtol_away:
    sequence:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.living
          hvac_mode: 'auto'

  home_near_heating:
    sequence:
      - condition: state
        entity_id: input_boolean.control_heating
        state: 'on'
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.living
          hvac_mode: 'heat'
      - service: climate.set_temperature
        data:
          entity_id: climate.living
        data_template:
          temperature: "{{ states('input_number.temp_home') | int - 1.5 }}"

  home_away_heating:
    sequence:
      - condition: state
        entity_id: input_boolean.control_heating
        state: 'on'
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.living
          hvac_mode: 'heat'
      - service: climate.set_temperature
        data:
          entity_id: climate.living
        data_template:
          temperature: "{{ states('input_number.temp_away') | float }}"
